{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js\";\n\nimport { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\n\nvar Prediction = function Prediction() {\n  var _useState = useState([{\n    title: \"Prediction Steps\",\n    id: 0\n  } //{ title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\n  //{ title: 'Welcome party!', id: 2 },\n  //{ title: 'Web dev top tips', id: 3 }\n  ]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prediction = _useState2[0],\n      setPrediction = _useState2[1];\n\n  var handlePrediction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPrediction, newPrediction1, newPrediction2, newPrediction3;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return sleep(1000);\n\n            case 2:\n              newPrediction = {\n                title: \"1. Collecting weather data for location\",\n                id: 1\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], newPrediction];\n              });\n              _context.next = 6;\n              return sleep(1000);\n\n            case 6:\n              newPrediction1 = {\n                title: \"2. Pre-processing weather data\",\n                id: 2\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], newPrediction1];\n              });\n              _context.next = 10;\n              return sleep(1000);\n\n            case 10:\n              newPrediction2 = {\n                title: \"3. Using pre-trained neural network to analyze data\",\n                id: 3\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], newPrediction2];\n              });\n              _context.next = 14;\n              return sleep(1000);\n\n            case 14:\n              newPrediction3 = {\n                title: \"4. Making final prediction for solar energy potential\",\n                id: 4\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3];\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePrediction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Preciction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Langitude\",\n    placeholder: \"Langitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Longitude\",\n    placeholder: \"Longitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onclick: \"runMLModel()\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"RUN MODEL\"), /*#__PURE__*/React.createElement(OutputList, {\n    prediction: prediction,\n    title: \"Prediction Steps\",\n    handlePrediction: handlePrediction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Prediction;","map":{"version":3,"sources":["/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js"],"names":["useState","OutputList","React","Prediction","title","id","prediction","setPrediction","handlePrediction","sleep","newPrediction","newPrediction1","newPrediction2","newPrediction3","ms","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\n\n\nconst Prediction = () => {\n  const [prediction, setPrediction] = useState([\n    {title: \"Prediction Steps\", id: 0}\n    //{ title: 'My new website', body: 'lorem ipsum...', author: 'mario', id: 1 },\n    //{ title: 'Welcome party!', id: 2 },\n    //{ title: 'Web dev top tips', id: 3 }\n  ])\n\n    const handlePrediction = async () => {\n    \n    await sleep(1000);\n    const newPrediction = {title: \"1. Collecting weather data for location\", id: 1};\n    setPrediction(prediction => [prediction[0], newPrediction]);\n\n    await sleep(1000);\n    const newPrediction1 = {title: \"2. Pre-processing weather data\", id: 2};\n    setPrediction(prediction => [prediction[0], prediction[1],newPrediction1]);\n\n    await sleep(1000);\n    const newPrediction2 = {title: \"3. Using pre-trained neural network to analyze data\", id: 3};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2],newPrediction2]);\n\n    await sleep(1000);\n    const newPrediction3 = {title: \"4. Making final prediction for solar energy potential\", id: 4};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3]);\n\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n    }   \n\n  return (\n    <div className=\"Preciction\">\n        <input type=\"text\" name=\"Langitude\" placeholder=\"Langitude\" required></input>\n        <br></br>\n        <input type=\"text\" name=\"Longitude\" placeholder=\"Longitude\" required></input>\n        <br></br>\n        <button type=\"submit\" onclick=\"runMLModel()\">RUN MODEL</button>\n      <OutputList prediction={prediction} title=\"Prediction Steps\" handlePrediction={handlePrediction} />\n    </div>\n  );\n}\n \nexport default Prediction;"]},"metadata":{},"sourceType":"module"}