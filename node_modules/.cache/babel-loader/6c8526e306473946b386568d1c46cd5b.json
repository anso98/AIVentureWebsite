{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js\";\n\nimport { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\n\nvar Prediction = function Prediction() {\n  var _useState = useState([{\n    title: \"1. HI\",\n    id: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prediction = _useState2[0],\n      setPrediction = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPending = _useState4[0],\n      setIsPending = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPrinting = _useState6[0],\n      setIsPrinting = _useState6[1];\n\n  var handlePrediction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPrediction, newPrediction1, newPrediction2, newPrediction3;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsPending(1);\n              _context.next = 3;\n              return sleep(1000);\n\n            case 3:\n              newPrediction = {\n                title: \"1. Collecting weather data for location\",\n                id: 1\n              };\n              setPrediction(function (prediction) {\n                return [newPrediction0];\n              });\n              console.log(prediction);\n              setIsPrinting(true);\n              _context.next = 9;\n              return sleep(1000);\n\n            case 9:\n              newPrediction1 = {\n                title: \"2. Pre-processing weather data\",\n                id: 2\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], newPrediction1];\n              });\n              _context.next = 13;\n              return sleep(1000);\n\n            case 13:\n              newPrediction2 = {\n                title: \"3. Using pre-trained neural network to analyze data\",\n                id: 3\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], newPrediction2];\n              });\n              _context.next = 17;\n              return sleep(1000);\n\n            case 17:\n              newPrediction3 = {\n                title: \"4. Making final prediction for solar energy potential\",\n                id: 4\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3];\n              });\n              setIsPending(2);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePrediction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Prediction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \" Please insert your location: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Latitude: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Latitude\",\n    placeholder: \"Latitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Longitude: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Longitude\",\n    placeholder: \"Longitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handlePrediction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"predict\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), isPending == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }\n  }, \" Prediction in Progress.... \")), isPending == 2 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 28\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 34\n    }\n  }, \" Prediction completed! \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), isPrinting && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outputBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }\n  }, prediction.map(function (prediction) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prediction-preview\",\n      key: prediction.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, prediction.title));\n  })));\n};\n\nexport default Prediction;","map":{"version":3,"sources":["/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js"],"names":["useState","OutputList","React","Prediction","title","id","prediction","setPrediction","isPending","setIsPending","isPrinting","setIsPrinting","handlePrediction","sleep","newPrediction","newPrediction0","console","log","newPrediction1","newPrediction2","newPrediction3","ms","Promise","resolve","setTimeout","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\n\n\n\nconst Prediction = () => {\n  const [prediction, setPrediction] = useState([{title: \"1. HI\", id: 0}]);\n  const [isPending, setIsPending] = useState(0);\n  const [isPrinting, setIsPrinting] = useState(false);\n\n\n    const handlePrediction = async () => {\n    \n    setIsPending(1);\n\n    await sleep(1000);\n    const newPrediction = {title: \"1. Collecting weather data for location\", id: 1};\n    setPrediction(prediction => [newPrediction0]);\n    \n    console.log(prediction);\n    setIsPrinting(true);\n\n\n\n    await sleep(1000);\n    const newPrediction1 = {title: \"2. Pre-processing weather data\", id: 2};\n    setPrediction(prediction => [prediction[0], prediction[1],newPrediction1]);\n\n    await sleep(1000);\n    const newPrediction2 = {title: \"3. Using pre-trained neural network to analyze data\", id: 3};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2],newPrediction2]);\n\n    await sleep(1000);\n    const newPrediction3 = {title: \"4. Making final prediction for solar energy potential\", id: 4};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3]);\n\n    setIsPending(2);\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n    }   \n\n  return (\n    <div className=\"Prediction\">\n        <h2> Please insert your location: </h2> \n        <br></br>\n        <label>Latitude: </label>\n        <input type=\"text\" name=\"Latitude\" placeholder=\"Latitude\" required></input>\n        <br></br>\n        <label>Longitude: </label>\n        <input type=\"text\" name=\"Longitude\" placeholder=\"Longitude\" required></input>\n\n        <br></br>\n\n        <button onClick={() => handlePrediction()}>predict</button>\n        <br></br>\n        {isPending == 1 && <div> <h3> Prediction in Progress.... </h3></div>}\n        {isPending == 2 && <div> <h3> Prediction completed! </h3></div>}\n\n        <br></br>\n        {isPrinting && <div className=\"outputBox\">\n            {prediction.map(prediction => (\n            <div className=\"prediction-preview\" key={prediction.id} >\n                <h2>{ prediction.title }</h2>\n            </div>\n            ))}\n        </div>}\n\n\n        </div>\n  );\n}\n \nexport default Prediction;\n"]},"metadata":{},"sourceType":"module"}