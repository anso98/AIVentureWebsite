{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js\";\n\nimport { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\nimport resultGraph from \"./../Images/graph.jpeg\"; // HAS TO BE CHANGED\n\nvar Prediction = function Prediction() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prediction = _useState2[0],\n      setPrediction = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPending = _useState4[0],\n      setIsPending = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPrinting = _useState6[0],\n      setIsPrinting = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      predResult = _useState8[0],\n      setPredResult = _useState8[1];\n\n  var handlePrediction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPrediction, newPrediction1, newPrediction2, newPrediction3;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsPending(1);\n              runMLModel();\n              _context.next = 4;\n              return sleep(1000);\n\n            case 4:\n              newPrediction = {\n                title: \"1. Collecting weather data for location\",\n                id: 1\n              };\n              setPrediction(function (prediction) {\n                return [newPrediction];\n              });\n              setIsPrinting(true);\n              _context.next = 9;\n              return sleep(1000);\n\n            case 9:\n              newPrediction1 = {\n                title: \"2. Pre-processing weather data\",\n                id: 2\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], newPrediction1];\n              });\n              _context.next = 13;\n              return sleep(1000);\n\n            case 13:\n              newPrediction2 = {\n                title: \"3. Using pre-trained neural network to analyze data\",\n                id: 3\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], newPrediction2];\n              });\n              _context.next = 17;\n              return sleep(1000);\n\n            case 17:\n              newPrediction3 = {\n                title: \"4. Making final prediction for solar energy potential\",\n                id: 4\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], newPrediction3];\n              });\n              _context.next = 21;\n              return sleep(2000);\n\n            case 21:\n              setIsPending(2);\n              _context.next = 24;\n              return sleep(2000);\n\n            case 24:\n              setIsPending(3);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePrediction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n\n  function runMLModel() {\n    var long = document.getElementById(\"long\").value;\n    var lat = document.getElementById(\"lat\").value;\n    var coordinates = {\n      'long': long,\n      'lat': lat\n    };\n    console.log(\"In RUN MODEL\");\n    console.log(long);\n    console.log(lat);\n    var request = new XMLHttpRequest();\n    request.open('POST', '/pythonScript/' + JSON.stringify(coordinates), true);\n    request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n    console.log(\"Right before sending\");\n    request.send();\n\n    request.onreadystatechange = function () {\n      if (request.readyState == 4 && request.status == 200) {\n        var result = request.response;\n        setPredResult(result); //document.getElementById(\"output1\").innerHTML = result;\n      }\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Prediction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputFields\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \" Please insert your location: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Latitude: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Latitude\",\n    placeholder: \"Latitude\",\n    id: \"lat\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Longitude: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Longitude\",\n    placeholder: \"Longitude\",\n    id: \"long\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handlePrediction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"predict\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ProgressReport\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, isPending == 1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Stage1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 32\n    }\n  }, \" Prediction in Progress.... \"), (isPending == 2 || isPending == 3) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Stage2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 52\n    }\n  }, \" Prediction completed! \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), isPrinting && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressStatementBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 28\n    }\n  }, prediction.map(function (prediction) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"oneStepPreview\",\n      key: prediction.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, prediction.title);\n  }))), (isPending == 2 || isPending == 3) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ResultDisplay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TextResult\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \" Your Estimate:\"), \"A solar panel at your location will produce\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"highlight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \" \", predResult, \" \"), \"every year!\"), isPending == 3 && /*#__PURE__*/React.createElement(\"img\", {\n    src: resultGraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TEST\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"HIHIHI\"));\n};\n\nexport default Prediction;","map":{"version":3,"sources":["/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js"],"names":["useState","OutputList","React","resultGraph","Prediction","prediction","setPrediction","isPending","setIsPending","isPrinting","setIsPrinting","predResult","setPredResult","handlePrediction","runMLModel","sleep","newPrediction","title","id","newPrediction1","newPrediction2","newPrediction3","ms","Promise","resolve","setTimeout","long","document","getElementById","value","lat","coordinates","console","log","request","XMLHttpRequest","open","JSON","stringify","setRequestHeader","send","onreadystatechange","readyState","status","result","response","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\nimport resultGraph from \"./../Images/graph.jpeg\"; // HAS TO BE CHANGED\n\n\n\nconst Prediction = () => {\n  const [prediction, setPrediction] = useState([]);\n  const [isPending, setIsPending] = useState(0);\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [predResult, setPredResult] = useState();\n\n\n\n    const handlePrediction = async () => {\n    \n    setIsPending(1);\n\n    runMLModel();\n\n    await sleep(1000);\n    const newPrediction = {title: \"1. Collecting weather data for location\", id: 1};\n    setPrediction(prediction => [newPrediction]);\n    \n    setIsPrinting(true);\n\n    await sleep(1000);\n    const newPrediction1 = {title: \"2. Pre-processing weather data\", id: 2};\n    setPrediction(prediction => [prediction[0], newPrediction1]);\n\n    await sleep(1000);\n    const newPrediction2 = {title: \"3. Using pre-trained neural network to analyze data\", id: 3};\n    setPrediction(prediction => [prediction[0], prediction[1], newPrediction2]);\n\n    await sleep(1000);\n    const newPrediction3 = {title: \"4. Making final prediction for solar energy potential\", id: 4};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2], newPrediction3]);\n    await sleep(2000);\n    setIsPending(2);\n    await sleep(2000);\n    setIsPending(3);\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    function runMLModel(){\n        var long = document.getElementById(\"long\").value;\n        var lat = document.getElementById(\"lat\").value;\n        var coordinates = {\n            'long': long,\n            'lat': lat,\n        }\n\n        console.log(\"In RUN MODEL\");\n        console.log(long);\n        console.log(lat);\n\n\n        const request = new XMLHttpRequest()\n        request.open('POST', '/pythonScript/' + JSON.stringify(coordinates), true)\n        request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8')\n        console.log(\"Right before sending\");\n        request.send()\n        request.onreadystatechange = () => {\n            if (request.readyState == 4 && request.status == 200) {\n                var result = request.response;\n                setPredResult(result);\n                //document.getElementById(\"output1\").innerHTML = result;\n\n            }\n        }\n    }\n\n  return (\n    <div className=\"Prediction\">\n        <div className=\"InputFields\">\n            <h2> Please insert your location: </h2> \n            <br></br>\n            <label>Latitude: </label>\n            <input type=\"text\" name=\"Latitude\" placeholder=\"Latitude\" id=\"lat\" required></input>\n            <br></br>\n            <label>Longitude: </label>\n            <input type=\"text\" name=\"Longitude\" placeholder=\"Longitude\" id=\"long\" required></input>\n            <br></br>\n            <button onClick={() => handlePrediction()}>predict</button>\n            <br></br>\n        </div>\n        \n        <div className=\"ProgressReport\">\n            {isPending == 1 && <div className=\"Stage1\"> Prediction in Progress.... </div>}\n            {(isPending == 2 || isPending == 3) && <div className=\"Stage2\"> Prediction completed! </div>}\n            <br></br>\n            {isPrinting && <div className=\"progressStatementBox\">\n                {prediction.map(prediction => (\n                <div className=\"oneStepPreview\" key={prediction.id} >\n                    { prediction.title }\n                </div>\n                ))}\n            </div>}\n        </div>\n\n        {(isPending == 2 || isPending == 3) && <div className=\"ResultDisplay\">\n             <div className=\"TextResult\">\n                <h2> Your Estimate:</h2>\n                A solar panel at your location will produce\n                <div className=\"highlight\"> {predResult} </div>\n                every year!\n            </div>\n            {isPending == 3 && <img src={resultGraph} />}\n        </div>}\n        <div className=\"TEST\">\n            HIHIHI\n        </div>\n    </div>\n  );\n}\n \nexport default Prediction;\n"]},"metadata":{},"sourceType":"module"}