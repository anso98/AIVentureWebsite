{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js\";\n\nimport { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\n\nvar Prediction = function Prediction() {\n  var _useState = useState([{\n    title: \"Prediction Steps\",\n    id: 0\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prediction = _useState2[0],\n      setPrediction = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPending = _useState4[0],\n      setIsPending = _useState4[1];\n\n  var handlePrediction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var newPrediction, newPrediction1, newPrediction2, newPrediction3;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsPending(true);\n              _context.next = 3;\n              return sleep(1000);\n\n            case 3:\n              newPrediction = {\n                title: \"1. Collecting weather data for location\",\n                id: 1\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], newPrediction];\n              });\n              _context.next = 7;\n              return sleep(1000);\n\n            case 7:\n              newPrediction1 = {\n                title: \"2. Pre-processing weather data\",\n                id: 2\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], newPrediction1];\n              });\n              _context.next = 11;\n              return sleep(1000);\n\n            case 11:\n              newPrediction2 = {\n                title: \"3. Using pre-trained neural network to analyze data\",\n                id: 3\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], newPrediction2];\n              });\n              _context.next = 15;\n              return sleep(1000);\n\n            case 15:\n              newPrediction3 = {\n                title: \"4. Making final prediction for solar energy potential\",\n                id: 4\n              };\n              setPrediction(function (prediction) {\n                return [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3];\n              });\n              setIsPending(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePrediction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function sleep(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Prediction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Latitude\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Latitude\",\n    placeholder: \"Latitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Longitude\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Longitude\",\n    placeholder: \"Longitude\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onclick: \"runMLModel()\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"RUN MODEL\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handlePrediction();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"predict\"), isPending && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }\n  }, \" Prediction in Progress.... \"), prediction.map(function (prediction) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"prediction-preview\",\n      key: prediction.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, prediction.title));\n  }));\n};\n\nexport default Prediction;","map":{"version":3,"sources":["/Users/Anso/Code/Imperial_College/AI Venture/sunshine-avenue/Webpage/src/components/Prediction.js"],"names":["useState","OutputList","React","Prediction","title","id","prediction","setPrediction","isPending","setIsPending","handlePrediction","sleep","newPrediction","newPrediction1","newPrediction2","newPrediction3","ms","Promise","resolve","setTimeout","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport OutputList from \"./OutputList\";\nimport React from 'react';\nimport '../App.css';\n\n\n\nconst Prediction = () => {\n  const [prediction, setPrediction] = useState([\n    {title: \"Prediction Steps\", id: 0}\n  ])\n  const [isPending, setIsPending] = useState(false);\n\n    const handlePrediction = async () => {\n    \n    setIsPending(true);\n\n    await sleep(1000);\n    const newPrediction = {title: \"1. Collecting weather data for location\", id: 1};\n    setPrediction(prediction => [prediction[0], newPrediction]);\n\n    await sleep(1000);\n    const newPrediction1 = {title: \"2. Pre-processing weather data\", id: 2};\n    setPrediction(prediction => [prediction[0], prediction[1],newPrediction1]);\n\n    await sleep(1000);\n    const newPrediction2 = {title: \"3. Using pre-trained neural network to analyze data\", id: 3};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2],newPrediction2]);\n\n    await sleep(1000);\n    const newPrediction3 = {title: \"4. Making final prediction for solar energy potential\", id: 4};\n    setPrediction(prediction => [prediction[0], prediction[1], prediction[2], prediction[3], newPrediction3]);\n\n    setIsPending(false);\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n    }   \n\n  return (\n    <div className=\"Prediction\">\n        <table> \n            <label>Latitude</label>\n            <input type=\"text\" name=\"Latitude\" placeholder=\"Latitude\" required></input>\n            <br></br>\n            <label>Longitude</label>\n            <input type=\"text\" name=\"Longitude\" placeholder=\"Longitude\" required></input>\n\n        </table>\n        \n\n        <br></br>\n        <button type=\"submit\" onclick=\"runMLModel()\">RUN MODEL</button>\n        <br></br>\n\n        <button onClick={() => handlePrediction()}>predict</button>\n        {isPending && <div> Prediction in Progress.... </div>}\n        {prediction.map(prediction => (\n          <div className=\"prediction-preview\" key={prediction.id} >\n            <h2>{ prediction.title }</h2>\n        </div>\n        ))}\n        </div>\n  );\n}\n \nexport default Prediction;\n"]},"metadata":{},"sourceType":"module"}